#include <stdio.h>
#include <assert.h>
#include <time.h>
#include "gc.h"
int main(void) {
  int i;
clock_t t;
t = clock();
  GC INIT();
  for(i=0;i<1000000; ++i){
    int **p = (int**) GC_MALLOC(sizeof(int));
    assert(*p==0);
    *p=(int*) GC_REALLOC(q, 2 * sizeof(int));
    if(i% 100000==0)
    printf("heap size= %d\n", GC get heap size());
  }
    t = clock() - t;
printf("\n\n");
    printf("Tempo de execucao: %lf", ((double)t)/((CLOCKS_PER_SEC/1000)));
printf("\n");
t = clock();
  GC INIT();
  for(i=0;i<1000000; ++i){
    int **p = (int**) GC_MALLOC(sizeof(int));
    assert(*p==0);
    *p=(int*) GC_REALLOC(q, 2 * sizeof(int));
free(q);
free(p);
    if(i% 100000==0)
    printf("heap size= %d\n", GC get heap size());
  }
    t = clock() - t;
printf("\n\n");
    printf("Tempo de execucao: %lf", ((double)t)/((CLOCKS_PER_SEC/1000)));
  return 0;
}